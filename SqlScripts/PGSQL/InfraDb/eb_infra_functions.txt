
****************eb sid gen**************************
CREATE OR REPLACE FUNCTION public.eb_sid_gen(
	)
    RETURNS text
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

DECLARE
source_string text := 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
sid text;
curr_time text;
eb_sid text;
BEGIN
	SELECT INTO sid array_to_string(array(select substr(source_string,((random()*(62-1)+1)::integer),1) from generate_series(1,10)),'');		
	SELECT INTO curr_time to_char(now(), 'YYYYMMDDHH12MISS');
	eb_sid = concat('ebdb',sid,curr_time);
RETURN lOWER(eb_sid);
END;

$BODY$;

ALTER FUNCTION public.eb_sid_gen()
    OWNER TO postgres;

	***************************eb subscription persist*****************************


	CREATE OR REPLACE FUNCTION public.eb_subscription_persist(
	sname text,
	i_sid text,
	e_sid text,
	tenant_id integer,
	descript text,
	js text)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

DECLARE    
    i record;
    eid integer;
BEGIN
insert into eb_solutions(solution_name,isolution_id,esolution_id,tenant_id,date_created,description)
values(sname,i_sid,e_sid,tenant_id,now(),descript) returning id into eid;
  if eid > 0 then
  	FOR i IN SELECT * FROM jsonb_each_text(js::jsonb)
  	LOOP
  	INSERT INTO solution_to_productplans(plan_id,product_id,solution_id) 
    values(i.value::integer,i.key::integer,eid);
  	END LOOP;
  end if;
  RETURN eid;
 END;

$BODY$;

ALTER FUNCTION public.eb_subscription_persist(text, text, text, integer, text, text)
    OWNER TO postgres;

	***************************eb tenant profile setup ********************************

	CREATE OR REPLACE FUNCTION public.eb_tenantprofile_setup(
	_firstname text,
	_company text,
	_country text,
	_pwd text,
	_email text)
    RETURNS integer
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$

DECLARE    
    _id integer;
BEGIN
UPDATE eb_users SET fullname =_firstname,company=_company,country=_country,pwd=_pwd 
WHERE email=_email RETURNING id INTO _id;
IF _id > 0 THEN
INSERT INTO eb_role2user(role_id,user_id,createdby,createdat) VALUES(2,_id,_id,NOW());
end if;
RETURN _id;
END;

$BODY$;

ALTER FUNCTION public.eb_tenantprofile_setup(text, text, text, text, text)
    OWNER TO postgres;

