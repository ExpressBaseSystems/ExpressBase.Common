-- FUNCTION: public.eb_objects_exploreobject(integer)

-- DROP FUNCTION public.eb_objects_exploreobject(integer);

CREATE OR REPLACE FUNCTION public.eb_objects_exploreobject(
	_id integer)
    RETURNS TABLE(idv integer, namev text, typev integer, status integer, description text, changelog text, commitat text, commitby text, refidv text, ver_num text, work_mode boolean, workingcopies text[], json_wc json, json_lc json, major_ver integer, minor_ver integer, patch_ver integer) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$

DECLARE
	workingcopies text[];
	json_wc json; json_lc json; no_of_workcopies integer;
	idv integer; namev text; typev integer; status integer;
	description text; changelog text; commitat text;commitby text;refidv text; ver_num text; work_mode boolean;
	major_ver integer; minor_ver integer; patch_ver integer;
 
BEGIN

	workingcopies := NULL;
	json_wc := NULL;
	json_lc :=NULL;

SELECT 
	string_to_array(string_agg((json_build_object( version_num, refid)::text),','),',') INTO workingcopies
FROM 
	eb_objects_ver 
WHERE 
	eb_objects_id=_id AND working_mode=true;
			
no_of_workcopies := COALESCE(array_length(workingcopies, 1), 0);

IF no_of_workcopies = 1 THEN
	SELECT 
			EO.id, EO.obj_name, EO.obj_type, EO.obj_cur_status, EO.obj_desc,
			EOV.obj_json, EOV.obj_changelog, EOV.commit_ts, EOV.refid, EOV.version_num, EOV.working_mode, 
			EU.firstname, EOV.major_ver_num, EOV.minor_ver_num, EOV.patch_ver_num
	INTO	idv, namev, typev, status, description, json_wc, changelog, commitat, refidv, ver_num, work_mode, commitby, major_ver, minor_ver, patch_ver
	FROM 
			 eb_objects EO, eb_objects_ver EOV
	LEFT JOIN
		eb_users EU
	ON 
		EOV.commit_uid=EU.id								 
	WHERE 
			EO.id = _id AND EOV.eb_objects_id = EO.id AND working_mode=true;
ELSE 
    IF no_of_workcopies = 0 THEN
        SELECT 
                EO.id, EO.obj_name, EO.obj_type, EO.obj_cur_status, EO.obj_desc,
                EOV.obj_json, EOV.obj_changelog, EOV.commit_ts, EOV.refid, EOV.version_num, EOV.working_mode, 
				EU.firstname, EOV.major_ver_num, EOV.minor_ver_num, EOV.patch_ver_num
        INTO	idv, namev, typev, status, description, json_lc, changelog, commitat, refidv, ver_num,  work_mode, commitby, major_ver, minor_ver, patch_ver
        FROM  
                eb_objects EO, eb_objects_ver EOV
        LEFT JOIN
                eb_users EU
        ON 
                EOV.commit_uid=EU.id								 
        WHERE 
                EO.id = _id AND EOV.eb_objects_id = EO.id  AND
                major_ver_num=(Select max(major_ver_num) from eb_objects_ver where eb_objects_id=_id) AND 
                minor_ver_num=(Select max(minor_ver_num) from eb_objects_ver where eb_objects_id=_id AND  major_ver_num=(Select max(major_ver_num) from eb_objects_ver where eb_objects_id=_id)) AND
                COALESCE(working_mode, FALSE) <> true;         
    END IF;
END IF;
RETURN QUERY
	SELECT idv, namev, typev, status, description, changelog, commitat, commitby, refidv, ver_num, COALESCE(work_mode,false), workingcopies, json_wc, json_lc,major_ver, minor_ver, patch_ver;
END

$BODY$;

ALTER FUNCTION public.eb_objects_exploreobject(integer)
    OWNER TO postgres;

