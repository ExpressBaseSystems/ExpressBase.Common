-- Table: public.eb_objects

-- DROP TABLE public.eb_objects;

CREATE TABLE public.eb_objects
(
    id integer NOT NULL DEFAULT nextval('eb_objects_id_seq'::regclass),
    obj_name text COLLATE pg_catalog."default",
    obj_bytea bytea,
    obj_type integer,
    CONSTRAINT eb_objects_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_objects
    OWNER to postgres;

-- Index: eb_objects_id_idx

-- DROP INDEX public.eb_objects_id_idx;

CREATE UNIQUE INDEX eb_objects_id_idx
    ON public.eb_objects USING btree
    (id)
    TABLESPACE pg_default;

-------------------------------------------------------------------------------------

-- Table: public.eb_operations

-- DROP TABLE public.eb_operations;

CREATE TABLE public.eb_operations
(
    id integer NOT NULL DEFAULT nextval('eb_operations_id_seq'::regclass),
    operation_name text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT eb_operations_id_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_operations
    OWNER to postgres;

-- Index: eb_operations_id_idx

-- DROP INDEX public.eb_operations_id_idx;

CREATE UNIQUE INDEX eb_operations_id_idx
    ON public.eb_operations USING btree
    (id)
    TABLESPACE pg_default;

	---------------------------------------------------------------------------------------

	-- Table: public.eb_permission2role

-- DROP TABLE public.eb_permission2role;

CREATE TABLE public.eb_permission2role
(
    id integer NOT NULL DEFAULT nextval('eb_permission2role_id_seq'::regclass),
    permission_id integer,
    role_id integer,
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    CONSTRAINT eb_permission2role_id_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char"),
    CONSTRAINT eb_permission2role_permission_id_fkey FOREIGN KEY (permission_id)
        REFERENCES public.eb_permissions (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT eb_permission2role_role_id_fkey FOREIGN KEY (role_id)
        REFERENCES public.eb_roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_permission2role
    OWNER to postgres;

-- Index: eb_permission2role_id_idx

-- DROP INDEX public.eb_permission2role_id_idx;

CREATE UNIQUE INDEX eb_permission2role_id_idx
    ON public.eb_permission2role USING btree
    (id)
    TABLESPACE pg_default;

	----------------------------------------------------------------------------------------------

	-- Table: public.eb_permissions

-- DROP TABLE public.eb_permissions;

CREATE TABLE public.eb_permissions
(
    id integer NOT NULL DEFAULT nextval('eb_permissions_id_seq'::regclass),
    object_id integer,
    operation_id integer,
    CONSTRAINT eb_permissions_id_pkey PRIMARY KEY (id),
    CONSTRAINT eb_permissions_object_id_fkey FOREIGN KEY (object_id)
        REFERENCES public.eb_objects (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT eb_permissions_operation_id_fkey FOREIGN KEY (operation_id)
        REFERENCES public.eb_operations (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_permissions
    OWNER to postgres;

-- Index: eb_permissions_id_idx

-- DROP INDEX public.eb_permissions_id_idx;

CREATE UNIQUE INDEX eb_permissions_id_idx
    ON public.eb_permissions USING btree
    (id)
    TABLESPACE pg_default;

	-----------------------------------------------------------------------------------------------

	-- Table: public.eb_role2role

-- DROP TABLE public.eb_role2role;

CREATE TABLE public.eb_role2role
(
    id integer NOT NULL DEFAULT nextval('eb_role2role_id_seq'::regclass),
    role1_id integer,
    role2_id integer,
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    CONSTRAINT eb_role2role_id_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char"),
    CONSTRAINT eb_role2role_role1_id_fkey FOREIGN KEY (role1_id)
        REFERENCES public.eb_roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT eb_role2role_role2_id_fkey FOREIGN KEY (role2_id)
        REFERENCES public.eb_roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_role2role
    OWNER to postgres;

-- Index: eb_role2role_id_idx

-- DROP INDEX public.eb_role2role_id_idx;

CREATE UNIQUE INDEX eb_role2role_id_idx
    ON public.eb_role2role USING btree
    (id)
    TABLESPACE pg_default;

	--------------------------------------------------------------------------------------------------

	-- Table: public.eb_roles

-- DROP TABLE public.eb_roles;

CREATE TABLE public.eb_roles
(
    id integer NOT NULL DEFAULT nextval('eb_roles_id_seq'::regclass),
    role_name text COLLATE pg_catalog."default" NOT NULL,
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    CONSTRAINT eb_roles_id_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char")
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_roles
    OWNER to postgres;

-- Index: eb_roles_id_idx

-- DROP INDEX public.eb_roles_id_idx;

CREATE UNIQUE INDEX eb_roles_id_idx
    ON public.eb_roles USING btree
    (id)
    TABLESPACE pg_default;

	---------------------------------------------------------------------------------------

	-- Table: public.eb_role2user

-- DROP TABLE public.eb_role2user;

CREATE TABLE public.eb_role2user
(
    id integer NOT NULL DEFAULT nextval('eb_role2user_id_seq'::regclass),
    role_id integer,
    user_id integer,
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    CONSTRAINT eb_role2user_id_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char"),
    CONSTRAINT rid_fkey FOREIGN KEY (role_id)
        REFERENCES public.eb_roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT uid_fkey FOREIGN KEY (user_id)
        REFERENCES public.eb_users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_role2user
    OWNER to postgres;

-- Index: eb_role2user_id_idx

-- DROP INDEX public.eb_role2user_id_idx;

CREATE UNIQUE INDEX eb_role2user_id_idx
    ON public.eb_role2user USING btree
    (id)
    TABLESPACE pg_default;

	-----------------------------------------------------------------------------------------------

	-- Table: public.eb_tablecolumns

-- DROP TABLE public.eb_tablecolumns;

CREATE TABLE public.eb_tablecolumns
(
    id integer NOT NULL DEFAULT nextval('eb_tablecolumns_id_seq'::regclass),
    columnname text COLLATE pg_catalog."default",
    columntype integer,
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    eb_lock "char" NOT NULL DEFAULT 'F'::"char",
    tablename text COLLATE pg_catalog."default",
    columntypename text COLLATE pg_catalog."default",
    CONSTRAINT eb_columns_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char"),
	CONSTRAINT check_types CHECK (eb_lock = 'T'::"char" OR eb_lock = 'F'::"char")
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_tablecolumns
    OWNER to postgres;

-- Index: eb_tablecolumns_idx

-- DROP INDEX public.eb_tablecolumns_idx;

CREATE UNIQUE INDEX eb_tablecolumns_idx
    ON public.eb_tablecolumns USING btree
    (id)
    TABLESPACE pg_default;

	--------------------------------------------------------------------------------------------------

	-- Table: public.eb_tables

-- DROP TABLE public.eb_tables;

CREATE TABLE public.eb_tables
(
    id integer NOT NULL DEFAULT nextval('eb_tables_id_seq'::regclass),
    tablename text COLLATE pg_catalog."default",
    tbldescription text COLLATE pg_catalog."default",
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    eb_void boolean DEFAULT false,
    eb_locked boolean DEFAULT false,
    CONSTRAINT eb_tables_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char")

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_tables
    OWNER to postgres;

-- Index: eb_tables_idx

-- DROP INDEX public.eb_tables_idx;

CREATE UNIQUE INDEX eb_tables_idx
    ON public.eb_tables USING btree
    (id)
    TABLESPACE pg_default;

	-------------------------------------------------------------------------------------------

	-- Table: public.eb_users

-- DROP TABLE public.eb_users;

CREATE TABLE public.eb_users
(
    id integer NOT NULL DEFAULT nextval('eb_users_id_seq'::regclass),
    email text COLLATE pg_catalog."default",
    pwd text COLLATE pg_catalog."default",
    eb_del "char" NOT NULL DEFAULT 'F'::"char",
    firstname text COLLATE pg_catalog."default",
    lastname text COLLATE pg_catalog."default",
    middlename text COLLATE pg_catalog."default",
    dob date,
    phnoprimary text COLLATE pg_catalog."default",
    phnosecondary text COLLATE pg_catalog."default",
    landline text COLLATE pg_catalog."default",
    extension text COLLATE pg_catalog."default",
    locale text COLLATE pg_catalog."default" NOT NULL,
    alternateemail text COLLATE pg_catalog."default",
    profileimg bytea,
    dateformat text COLLATE pg_catalog."default" NOT NULL DEFAULT 'DD/MM/YYYY'::text,
    timezone text COLLATE pg_catalog."default" NOT NULL DEFAULT 'UTC+05:30'::text,
    numformat text COLLATE pg_catalog."default" NOT NULL DEFAULT '0,000.00'::text,
    timezoneabbre text COLLATE pg_catalog."default" NOT NULL,
    timezonefull text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT eb_users_pkey PRIMARY KEY (id),
	CONSTRAINT check_types CHECK (eb_del = 'T'::"char" OR eb_del = 'F'::"char")
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.eb_users
    OWNER to postgres;

-- Index: eb_users_id_idx

-- DROP INDEX public.eb_users_id_idx;

CREATE UNIQUE INDEX eb_users_id_idx
    ON public.eb_users USING btree
    (id)
    TABLESPACE pg_default;
