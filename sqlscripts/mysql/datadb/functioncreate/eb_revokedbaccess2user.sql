CREATE PROCEDURE eb_revokedbaccess2user(IN username TEXT,
    IN dbname TEXT,
    OUT out_b BOOLEAN)
BEGIN
DECLARE dbs TEXT;
DECLARE done BOOLEAN;
DECLARE s TEXT;
DECLARE s1 VARCHAR(200);
DECLARE cur1 CURSOR FOR SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;   
OPEN cur1;
read_loop: LOOP
      FETCH cur1 INTO dbs;
     
      IF done THEN
      LEAVE read_loop;
    END IF;
     REVOKE SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,RELOAD,SHUTDOWN,PROCESS,FILE,REFERENCES,INDEX,ALTER,SHOW DATABASES,
		SUPER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,REPLICATION SLAVE,REPLICATION CLIENT,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,
		ALTER ROUTINE,CREATE USER,EVENT,TRIGGER,CREATE TABLESPACE,CREATE ROLE,DROP ROLE,XA_RECOVER_ADMIN,SYSTEM_VARIABLES_ADMIN,
		SET_USER_ID,SESSION_VARIABLES_ADMIN,SERVICE_CONNECTION_ADMIN,ROLE_ADMIN,RESOURCE_GROUP_USER,RESOURCE_GROUP_ADMIN,
		REPLICATION_SLAVE_ADMIN,PERSIST_RO_VARIABLES_ADMIN,GROUP_REPLICATION_ADMIN,ENCRYPTION_KEY_ADMIN,CONNECTION_ADMIN,
		BINLOG_ENCRYPTION_ADMIN,BINLOG_ADMIN,BACKUP_ADMIN,APPLICATION_PASSWORD_ADMIN ON dbs FROM  username;
  
  	END LOOP;
    CLOSE cur1;
GRANT ALL PRIVILEGES ON dbname TO username WITH GRANT OPTION;
FLUSH PRIVILEGES;
   SELECT TRUE INTO out_b;
END