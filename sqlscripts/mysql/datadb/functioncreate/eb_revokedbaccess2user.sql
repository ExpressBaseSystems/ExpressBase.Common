CREATE PROCEDURE eb_revokedbaccess2user(in username text,
    in dbname text,
    out out_b boolean)
BEGIN
DECLARE dbs text;
declare done boolean;
declare s text;
declare s1 varchar(200);
declare cur1 cursor for select SCHEMA_NAME from INFORMATION_SCHEMA.SCHEMATA;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;   
open cur1;
read_loop: loop
      FETCH cur1 INTO dbs;
     
      IF done THEN
      LEAVE read_loop;
    END IF;
     REVOKE SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,RELOAD,SHUTDOWN,PROCESS,FILE,REFERENCES,INDEX,ALTER,SHOW DATABASES,
		SUPER,CREATE TEMPORARY TABLES,LOCK TABLES,EXECUTE,REPLICATION SLAVE,REPLICATION CLIENT,CREATE VIEW,SHOW VIEW,CREATE ROUTINE,
		ALTER ROUTINE,CREATE USER,EVENT,TRIGGER,CREATE TABLESPACE,CREATE ROLE,DROP ROLE,XA_RECOVER_ADMIN,SYSTEM_VARIABLES_ADMIN,
		SET_USER_ID,SESSION_VARIABLES_ADMIN,SERVICE_CONNECTION_ADMIN,ROLE_ADMIN,RESOURCE_GROUP_USER,RESOURCE_GROUP_ADMIN,
		REPLICATION_SLAVE_ADMIN,PERSIST_RO_VARIABLES_ADMIN,GROUP_REPLICATION_ADMIN,ENCRYPTION_KEY_ADMIN,CONNECTION_ADMIN,
		BINLOG_ENCRYPTION_ADMIN,BINLOG_ADMIN,BACKUP_ADMIN,APPLICATION_PASSWORD_ADMIN ON   dbs FROM  username;
    
  	END loop;
    close cur1;
  
     GRANT ALL privileges on dbname TO username WITH GRANT OPTION;
 
     FLUSH PRIVILEGES;
   select true into out_b;
END